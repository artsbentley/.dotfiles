layout_postgres() {
	export PGDATA="$(direnv_layout_dir)/postgres"
	export PGHOST="$PGDATA"

	if [[ ! -d "$PGDATA" ]]; then
		initdb
		cat >> "$PGDATA/postgresql.conf" <<-EOF
			listen_addresses = ''
			unix_socket_directories = '$PGHOST'
		EOF
		echo "CREATE DATABASE $USER;" | postgres --single -E postgres
	fi
}


layout_kafka() {
	GREEN='\033[0;32m'
	NC='\033[0m'  # No Color

    export KAFKA_HOME="$(direnv_layout_dir)/kafka"
    export PATH="$KAFKA_HOME/bin:$PATH"
	TOPICS_FILE=".topics.config"

	# Read topics from the topics.config file
	if [ -f "$TOPICS_FILE" ]; then
		IFS=$'\n' read -d '' -r -a topics < "$TOPICS_FILE"
	else
		echo "Error: Topics configuration file '$TOPICS_FILE' not found."
		exit 1
	fi

    if [[ ! -d "$kafka_home" ]]; then
        # Download and extract Kafka
        wget -q https://downloads.apache.org/kafka/3.6.1/kafka_2.13-3.6.1.tgz
        tar -xzf kafka_2.13-3.6.1.tgz
        mv kafka_2.13-3.6.1 "$KAFKA_HOME"
        rm kafka_2.13-3.6.1.tgz

        # Create data directory
        mkdir -p "$KAFKA_HOME/data"
    fi

    # Copy server.properties file from current directory to Kafka config directory
    cp -f .kafka.properties "$KAFKA_HOME/config/server.properties"

    # Start Kafka Broker
    nohup $KAFKA_HOME/bin/kafka-server-start.sh $KAFKA_HOME/config/server.properties > $KAFKA_HOME/kafka.log 2>&1 &

	for topic in "${topics[@]}"; do
		$KAFKA_HOME/bin/kafka-topics.sh --create --topic "$topic" --bootstrap-server localhost:9092 --partitions 1 --replication-factor 1
    done

    echo "Kafka environment is set up. Zookeeper and Kafka Broker are running."

	# List existing topics
    echo -e "\n${GREEN}Existing Topics:${NC}"
    $KAFKA_HOME/bin/kafka-topics.sh --list --bootstrap-server localhost:9092
	echo -e 
}

