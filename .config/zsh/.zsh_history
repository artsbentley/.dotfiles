l
c
z osx
l
.
z os
l
lt
..
l
lt
cd install
l
vim osx.sh
vim quickinstall.sh
vim brew-install.sh
l
rm osx.sh
l
..
l
c
l
l
l
c
l
l
vim
vim 
l
vim .gitignore
l
git status
git tatus
git status
git status
l
l
which
which bash
which zsh
which nvim
which spotify
which lf
which ls
which l
which clear
z .config
l
cd nvim
l
lt
cd lua
lt
vim
l
vim test.sh
l
chmod +x test.sh
l
./test.sh
./test.sh
t rust cli
vim test2.sh
l
./ test2.sh
l
chmod +x test2.sh
l
./ test2.sh
l
chmod -x test2.sh
l
chmod 777 test2.sh
l
./ test2.sh
l
chmod +x test2.sh
l
./ test2.sh
test2.sh
run the test2.sh
run test2.sh
chmod u+x test2.sh
l
./test2.sh
l
chmod -x test2.sh
l
./test2.sh
chmod +x test2.sh
l
./test2.sh
l
z tue
..
..
z tue
z werkm
l
c
l
l
l
c
l
c
l
c
l
lfcd
lfcd
..
l
cd TROEF
l
cd TUE
l
..
l
c
l
t tue
l
vim
l
l
z werk
l
mkdir rust
cd rust
l
t
 rust
.
..
t rust
..x
l
l
ls
mkdir bash_playground
cd bash_playground
l
t
tmux attach
pip install pandas
pip3 install pandas
l
vim
vim 
vim
vim
vim
k
l
vim
vim
t
z tue
l
pwd
l
..
l
rm -rf .git
l
cd TUE
l
vim
l
vim
t troef kpi calc
l
git status
vim
vim
vim 
vim
vim
vim
vim
vim
vim
vim
cargo run
cargo run -q
ls
tree
lt
cd target
lt
..
cargo test
ls
tree
lt
c
lt
mkdir tests
l
lt
cd tests
l
vim cli.rs
cargo test
echo $PATH
echo $PATH | tr : \n
run-help tr
run-help tr
run-help tr
run-help tr
run-help jq
echo $PATH | tr : '\n'
cargo test
cargo test
cargo test
c
c
..
cargo test
cargo test
c
c
cargo test
cd tests
c
cargo test
--test cli
c
cargo test
cd tests
cargo test -q
cargo test -q
c
cargo test -q
man true
man tr
man ls
c
true
vim
vim
l
cd dsh
l
cd install
l
vim
vim
vim
vim
vim
vim
l
vim Dockerfile
l
vim
vim
l
vim
brew install karabiner
brew install --cask karabiner-elements
c
vim
vim
git clone https://github.com/kpn-dsh/troef-kpi-calculator.git
l
cd troef-kpi-calculator
l
vim
vim
l
..
l
z troef
l
z troef
l
c
c
l
docker pull registry.cp.kpn-dsh.com/troef/bam-pull-service:2.1
docker pull registry.cp.kpn-dsh.com/troef/bam-pull-service:2.1
docker pull registry.cp.kpn-dsh.com/troef/bam-pull-service:2.1
docker pull registry.cp.kpn-dsh.com/troef/bam-pull-service:2.1
docker status
man docker
docker pull registry.cp.kpn-dsh.com/troef/bam-pull-service:2.1
systemctl start docker
start docker
docker pull registry.cp.kpn-dsh.com/troef/bam-pull-service:2.1
docker ps
docker container ls
c
docker run 835ba0a2005f
docker run -it --entrypoint /bin/bash 835ba0a2005f
ls
ls
vim
l
vim
t dotf conf
lf
lf
lf
vim
vm
vim
l
vim
vim
vim
l
z lf
l
cd .config
l
vim
l
cd lf
l
vim
z nvim
l
c
l
cd lua
l
cd plugins
l
vim lf.lua
vim
vim
l
vim
cd cli
l
vim
true
echo $?
cargo run -q --bin true
echo $?
false
echo $?
false
echo $?
c
cargo run -q --bin true
echo $?
cargo test
pwd
l
mkdir src/bin
l
cd src
l
c
..
l
l
vim knmi_bunnik.csv
l
vim
ls
vim Dockerfile
vim
vim
vim schedule.js
lf
lfcd
lfcd
lfcd
ls
docker cp 65f3a572ba9: /home/node .
docker cp 65f3a572ba9:/home/node .
l
cd node
l
vim
l
cd app
l
docker ps
 e
docker ps
s
ls
vim index.js
ls
vim inde
vim index.js
vim
vim
l
cat .neoconf.json
vim stylua.toml
vim stylua.toml
vim stylua.toml
vim stylua.toml
..
l
l
cd rust_playground
l
t rust
t tue 
l
t node
l
vim
vim
vim
vim 
vim
vim 
vim
vim
vim
vim
vim
vim
vim 
vim
l
vim
cargo test
cargo test
l
vim
vim 
vim 
vim
vim
vim
l
vim stylua.toml
cd lua
l
vim
c
l
vim alacritty.yml
vim alacritty.yml
vim alacritty.yml
vim alacritty.yml
vim alacritty.yml
t nvim
vim alacritty.yml
l
c
vim alacritty.yml
vim ala
vim alacritty.yml
c
c
z lf
l
vim
vim lfrc
l
make all
make all
l
cd app
l
make all
vim Makefile
cd app
node timezone_test.js
node timezone_test.js
node timezone_test.js
node timezone_test.js
node timezone_test.js
node timezone_test.js
node timezone_test.js
node timezone_test.js
node timezone_test.js
c
c
c
node timezone_test.js
node timezone_test.js
node timezone_test.js
l
make all
vim
vim 
l
vim
l
cd .config
l
vim
c
cargo test
cargo run --bin -q false
cargo run --q  --bin false
cargo run -q  --bin false
echo $?
cargo test
cargo test
c
cargo test
cargo test
c
cargo test
cargo test
c
cargo test
cargo test
c
cargo test
cargo test
c
false && ls
echo $?
$?
$?
l
vim
l
..
l
cargo new echor
cd echor
l
vim
vim
vim
vim
vim
vim
vim
vim
vim
vim
vim
vim
vim
vim
vim
vim
l
vim 
vim
vim
vim
l
vim
vim
vim
vim
vim
vim
vim
l
vim 
c
l
vim
vim
l
lfcd
vim
cd app
vim
vim
l
vim
vim
vim
cargo run
cargo run
cargo run
cargo run
ech
ec
echo
c
cargo run hello m
e
cargo run hello m8
cargo run -- hello world -n
cargo run -- hello world -n
c
du -skh
du -skc
du -shc
vim
git clone https://github.com/kpn-dsh/troef-energynxt-event-mapper.git
cd troef-energynxt-event-mapper
t energy mapper
l
c
l
vim index.js
vim
vim
vim
vm
vim
vim
vim hello.py
l
vim
vim
vim
vim
vim
vim
vim
vim
vim
l
vim
 im
vim
vim
vin
vim
vim
q
eq
\:q
vim
vim
dim
vim
vim
vim
vim
vim
vim
vim
vim
vim
vim
vim
vim
vim
l
t ala
t dotfiles
l
vim
vim
l
vim
vim
vim
vim 
vim
vim
vm
vim
vim
vim
vm
vim
vim
vim
vim
vim
vim
vim
vim
vim
vim
vim
vim
vim
vim
vim 
l
c
vim
vim
vi
vim
vim
cargo run -- -hel
cargo run -- -help
cargo run -- -help
c
cargo run -n hello world
cargo run -- -n hello world
cargo run - -- hello world
cargo run -- hello world
cargo run -- hello world -n
cargo run -- hello world -n
cargo run -- hello world 
vim
l
vim
v
l
ls
vim
vim
vim
v
v
v
l
t dot
z werk
l
mkdir design_patterns
l
cd design_patterns
l
help [
help ]
man [
v
l
cd .config
l
vim
v
l
vim
help {
help [
l
[[install -n]]
[install -n]
[ ./install -n ]
[./install -n]
[[ ./install -n ]]
[[ README.md -n ]]
[[ -n ./install ]]
echo [[ -n ./install ]]
[[ -n ./install ]]
echo $?
echo $?
[[ -n ./install ]]
echo $?
echo [[ -n ./install ]]
echo $?
echo [[ -n ./install ]]
echo [[ -n ./install/bananaphone ]]
echo [[ -n ./instal ]]
echo [[ -n ./install ]]
[[ -n ./install/banana ]]
echo $?
[[ -n hello ]]
echo $?
[[ -n "hello" ]]
echo $?
[ -n hello }
[ -n hello ]
echo $?
[[ -n .install/bananaphone/ ]] || vim install.sh
man [
which bash
which zsh
l
man -c
man -n
cd banana || echo "dhello there"
echo $DIR
echo $DIR
l
cd install
echo $DIR
v
cargo run 
cargo run 1>out 2>err
l
lf
cargo run hello world 1>out 2>err
lf
cargo run 
c
cargo run 
cargo run hi
c
cargo run 
echo 4?
echo $?
echo 4?
cargo run 
echo $?
l
..
v
v
z down
z werk
l
..
l
cd Downloads
l
vim
vim
z echor
l
c
l
rm martin.hs
l
vim
v
v
cargo run -- hello world
cargo run -- hello world -n
v
help [
man [
l
echo $DIR
echo $PATH
echo $PATH | tr / \n
echo $PATH
echo $PATH | tr "/" "\n"
echo $PATH | tr "/" "\n" | fzf
pwd
l
[[ -n README.md ]] && cd install
..
[[ -n README.hs ]] && cd install
..
l
test.md
touch test.md
l
[[ -n test.md ]] && echo hi
[[ -n ]] && echo hi
[[ -n " " ]] && echo hi
[[ -n "" ]] && echo hi
[[ -n "" ]] && echo hi
rm test.md
l
help [
read -p "Enter your name: " name
read -p "Enter your name: " name
vime test.sh
vim test.sh
l
chmod +x test.sh
l
./test.sh
vim test.sh
./test.sh
./test.sh
vim test.sh
./test.sh
vim test.sh
./test.sh
l
l
z | fzf
z dot | fzf
v 
l
z tmux
l
vim tmux.conf
vim tmux.conf
pip3 install sqlalchemy
l
vim README.md
l
vim README.md
l
l
l
cd dsh
l
..
vim Makefile
make all
make all
ll
z dot
l
vim README.md
make all
make all
make all
t dot
l
lf
l
v
git checkout 17b0062ab5b7e851e8220a802ef7a6cbb694f50e
git checkout 17b0062ab5b7e851e8220a802ef7a6cbb694f50e
v
make all
make all
make all
make all
make all
..
l
mkdir tmp
l
cd tmp
l
vim temp.txt
z zsh
l
vim
v
l
vim .zsh
vim .zshrc
l
echo PATH
echo $PATH
echo $PATH | tr ":" " "
echo $PATH | tr ":" "\n"
l
z zsh
l
lazygit
c
l
pwd
l
commit help
git commit --help
cargo install cargo-watch
whoami PATH
whoami$ PATH
whoami $PATH
which $PATH
c
l
cargo-watch x check
z install
z dot
l
cd install
l
vim brew-install.sh
rustup
l
z dot
l
vim README.md
git switch -
git checkout master
t kpi
z dot
vim REAwf
vim README.md
l
z tmux
l
vim tu
vim tmux.conf
vim tmux.conf
vim tmux.conf
vim tmux.conf
vim tmux.conf
z dot
l
vim README.md
z dot
vim REA
vim README.md
make all
l
z dot
l
z dot
l
vim README.md
l
l
mkdir DSH
l
l
cd DSH
l
vim Dockerfile
z dot
vim README.md
ssh
help ssh
echo $PATH 
echo $PATH | tr ":" "n\"
echo $PATH | tr ":" "n\"
echo $PATH | tr ":" " "
echo $PATH | tr ":" "\n "
z zsh
l
v
l
vim .zshrc
z werk
l
cd e2e_functional_monitoring
l
v
l
cd app
v
make all
git config --global core.excludesFile '~/.gitignore'
l
cd ~
l
vim .gitignore
vim .gitignore
git config --global core.excludesFile '~/.dotfiles/.gitignore' 
echo $?
vim .zshenv
l
vim .exa
z dot
vim README.md
l
z dot
l
z dot
l
echo ".zsh_history" >> .gitignore
vim .gitignore
z dot
l
vim .gitignore
z dot
l
vim .zshenv
z ~
l
vim .zshenv
git branch -r
git branch | grep -v "master" | xargs git branch -D 
git branch -r
l
git status
git checkout dotfiles/master
git checkout main
git checkout master
git branch --delete dotfiles/naster
git branch --delete dotfiles/master
git branhes
git branches
git branch -r
git pull
git pull --rebase
l
git pull
git branch -r
git pull --rebase
l
git status
git branch -r
$ git branch | grep -v "master" | xargs git branch -D 
 git branch | grep -v "master" | xargs git branch -D 
echo $?
git branch -r
git branch -a
git fetch origin --prune
git fetch master --prune
git remote prune
git --fetch prune
git fetch --prune
git status\
git status
c
git config pull.ff only
git config pull help
git config pull rebase only
git status
git pull
git fetch
git status
git pull
git merge remote/master
git branch
git pull
git checkout remote
git checkout master
git pull 
l
git checkout dotfiles/master
l
git checkout master
git merge dotfiles/master/master
git merge "dotfiles/master"/master
âƒ½¯ git checkout dotfiles/master
 git checkout dotfiles/master
git commit
git add .
git commit - "credentials" 
git commit -m "credentials" 
git push 
 git push dotfiles HEAD:dotfiles/master
 git push dotfiles HEAD:refs/heads/dotfiles/maste
 git push dotfiles HEAD:refs/heads/dotfiles/mastee
 git push dotfiles HEAD:refs/heads/dotfiles/master
l
l
git checkout master
l
git checkout main
git status
l
l
z zsh
l
vim credentials.zsh
l
vim credentials.zsh
l
vim .zshenv
l
cd TROEF
l
l
vim before_midnight_results.txt
vim before_midnight_results.txt
z install
l
v
bat --list-themes
z dot
vim README.md
l
echo '.DS_STORE' >> ~/.gitignore\

l
vim .git
vim .gitignore
l
echo '.DS_STORE' > ~/.gitignore\

echo '.DS_STORE' > .gitignore\

vim .git
vim .gitignore
echo ".DS_Store" > .gitignore
vim .gitignore
echo ".DS_Store" >> .gitignore
vim .gitignore
l
vim README.md
vim README.md
l
vim README.md
vim README.md
bat --list-themes
c
l
lfcd
lfcd
lfcd
lfcd
lfcd
l
z lf
lfcd
lfcd
lfcd
lfcd
lf
lfcd
z dot
l
cd install
l
vim brew-install.sh
lf
lfcd
lfcd
brew install xdg-utils
lfcd
lfcd
lfcd
lfcd
z ~
l
c
t ~
t werkmap
\:q
rustup add clippy
source $HOME/.cargo/env 
rustup add clippy source $HOME/.cargo/env 
rustup-init
cargo clippy -- -D warnings
cargo clippy
l
cd src
l
v
l
vim
vim
cargo test
l
pwd
tree
lt
c
lt
z test
cargo test
v
c
..
cargo test
l
cd target
l
cd debug
l
c
l
..
..
...
l
cd rust_playground
l
t rust_pl
vim
l
..
l
git clone https://github.com/artsbentley/design_patterns.git
l
cd design_patterns
l
v
c
l
mkdir python
l
cv python
l
cd python
l
l
vim DatabaseConnection.py
ll
l
vim loop.sh
vim loop.sh
lfcd
l
for arg in $(cat test.sh); do echo arg\
l
l
l
chmod +x loop.sh
l
bash loop.sh dhello how are you
bash loop.sh dhello how are you
bash loop.sh dhello how are you
bash loop.sh dhello how are you
l
c
l
c
c
l
make all
make all
make all
make all
make all
make all
l
l
l
c
l
mkdir dsh
cp setup_ssl_dsh.sh dsh
cp entrypoint.sh dsh
l
rm entrypoint.sh
rm setup_ssl_dsh.sh
l
c
l
mv .DS_Store dsh
mv lib dsh
l
l
c
make all
lfcd
l
vim config
l
z lf
l
v
l
z dot
l
vim README.md
l
c dsh ~/Werkmap/TROEF/TUE/
l
cp dsh ~/Werkmap/TROEF/TUE/
cp dsh/ ~/Werkmap/TROEF/TUE/
cp -r dsh/ ~/Werkmap/TROEF/TUE/
l
c
l
cd dsh
l
make all
l
make all
make all
make all
make all
make all
make all
make all
make all
make all
l
v
make all
make all
make all
l
z dot
l
z dot
vim README.md
hostname
whoami
pingme
ping
c
vim README.md
z dot
z dot
l
vim README.md
z dot
vim README.md
python3 sanni.py
l
cd .config
l
z werkm
mkdir hisanni
cd hisanni
l
touch sanni.py
l
vim sanni.py
which stow
z dot
l
lfcd
l
lfcd
l
v
l
v README.md
z werkmap 
git clone https://github.com/Bastardkb/Elite-C-holder.git
l
c
l
c
l
v
make all
make all
make all
make all
make all
make all
z dot
l
cd install
l
vim brew-install.sh
l
z dot
l
vim .gitignore
l
z
l
c
l
pwd
z werk
l
c
l
mkdir gemeente_den_haag
cd gemeente_den_haag
rpm -q | grep rsyslog
which rsyslog
brew install rsyslog
l
c
l
systemctl status rsyslog
which rsyslog
